% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3-classes.R
\name{error_http}
\alias{error_101}
\alias{error_404}
\alias{error_414}
\alias{error_http}
\title{higher level error wrappers}
\usage{
error_http(x, behavior = "stop", message_template = NULL)

error_101(x, behavior = "stop", message_template = NULL)

error_404(x, behavior = "stop", message_template = NULL)

error_414(x, behavior = "stop", message_template = NULL)
}
\arguments{
\item{x}{the result of a call via \pkg{crul}, \pkg{curl}, or \pkg{httr}}

\item{behavior}{Behavior of the error. See \code{\link{Error}}}

\item{message_template}{A message template, not working yet}
}
\description{
higher level error wrappers
}
\examples{
\dontrun{
if (requireNamespace("crul")) {
 res <- HttpClient$new("https://httpbin.org/status/418")$get()
 error_http(res)

 res <- HttpClient$new("https://httpbin.org/status/414")$get()
 error_414(res)

 res <- HttpClient$new("https://httpbin.org/asdfafadsf")$get()
 error_404(res)
}

if (requireNamespace("curl")) {
 h <- curl::new_handle()
 curl::handle_setopt(h)
 resp <- curl::curl_fetch_memory("https://httpbin.org/status/418", h)
 error_http(resp)

 resp <- curl::curl_fetch_memory("https://httpbin.org/status/414", h)
 error_414(res)

 resp <- curl::curl_fetch_memory("https://httpbin.org/asdfadfasdf", h)
 error_404(res)
}

if (requireNamespace("httr")) {
 res <- GET("https://httpbin.org/status/418")
 error_http(res)

 res <- GET("https://httpbin.org/status/414")
 error_414(res)

 res <- GET("http://localhost:9800/gettttt")
 error_404(res)
}
}
}

